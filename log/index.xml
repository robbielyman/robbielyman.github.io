<rss version="2.0">
  <channel>
    <title>alanza.xyz blog</title>
    <link>https://alanza.xyz/</link>
    <description>Robbie Lyman's personal blog</description>
    <generator>Robbie Lyman -- https://alanza.xyz</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 08 Dec 2024 18:49:51 +0000</lastBuildDate>
    
    <item>
     <pubDate>Sun, 08 Dec 2024 16:00:00 +0000</pubDate>
     <link>https://alanza.xyz/log/just-write-the-function/</link>
     <guid>https://alanza.xyz/log/just-write-the-function/</guid>
     <title>Just write the function!</title>
     <description>
       <span>&lt;div id=summary&gt;&lt;p&gt; This is a post inspired by my approach to this year’s &lt;a href=&quot;https://adventofcode.com/&quot; target=&quot;_blank&quot;&gt;Advent of Code&lt;/a&gt;, but it does not contain spoilers. Instead I want to talk about how being more “data-oriented” has helped my thinking about coding problems.&lt;/p&gt;&lt;/div&gt;</span>
       <a href="https://alanza.xyz/log/just-write-the-function/">Read More</a>
     </description>
    </item>
   
    <item>
     <pubDate>Thu, 05 Dec 2024 15:40:00 +0000</pubDate>
     <link>https://alanza.xyz/log/advent-of-code-learning/</link>
     <guid>https://alanza.xyz/log/advent-of-code-learning/</guid>
     <title>What I learned from Advent Of Code, or: That time I wrote a blog post and linked to it in the Zig issue tracker</title>
     <description>
       <span>&lt;div id=summary&gt;&lt;p&gt;I’m doing Advent of Code again this year; so far I’ve been very pleasantly surprised that my facility for solving the problems has improved. (Of course, I’m well aware that the difficulty is likely to ramp up soon, so I may end up eating my words.) Previously, I did the 2023 Advent of Code as it happened in Zig. &lt;em&gt;Pace&lt;/em&gt; Loris Cro, &lt;a href=&quot;https://kristoff.it/blog/advent-of-code-zig/&quot;&gt;who wrote a great blog post on the subject&lt;/a&gt;, I think that despite the way Advent of Code problems are at odds with the kinds of software problems that Zig aims itself at solving, doing Advent of Code is a great way to gain familiarity with Zig. Over this past summer I also did the 2022 Advent of Code problems as a way of learning Rust. Today, solving the 5th problem for 2024, it occurred to me that Rust had taught me something surprisingly useful for my Zig solution. The purpose of this post is to talk about what I learned—this post does not contain spoilers for any Advent of Code problems, and indeed is not really “about” Advent of Code at all: as I was writing it, it became clear that part of this blog post actually belongs on the Zig issue tracker.&lt;/p&gt;&lt;/div&gt;</span>
       <a href="https://alanza.xyz/log/advent-of-code-learning/">Read More</a>
     </description>
    </item>
   
    <item>
     <pubDate>Tue, 26 Nov 2024 20:00:00 +0000</pubDate>
     <link>https://alanza.xyz/log/double-cosets-are-edges/</link>
     <guid>https://alanza.xyz/log/double-cosets-are-edges/</guid>
     <title>Double cosets are edges</title>
     <description>
       <span>&lt;div id=summary&gt;&lt;p&gt; Today &lt;a href=&quot;https://arxiv.org/abs/2411.15337&quot;&gt;my 15th posting&lt;/a&gt; to the arXiv went live! I intend to write about some of the other aspects of that paper elsewhere (possibly another post on this blog), since I think it really clarified something important for me, but I wanted to explain one insight that made a mysterious thing less mysterious to me: “double cosets”.&lt;/p&gt;&lt;/div&gt;</span>
       <a href="https://alanza.xyz/log/double-cosets-are-edges/">Read More</a>
     </description>
    </item>
   
    <item>
     <pubDate>Tue, 26 Nov 2024 18:00:00 +0000</pubDate>
     <link>https://alanza.xyz/log/so-whats-topology/</link>
     <guid>https://alanza.xyz/log/so-whats-topology/</guid>
     <title>So what’s this topology thing?</title>
     <description>
       <span>&lt;div id=summary&gt;&lt;p&gt; The purpose of this post is to serve as a reference I can link to. I define topological spaces, sure, but the goal is really to communicate what they feel like, how I think about them, what I think is neat about them.&lt;/p&gt;&lt;/div&gt;</span>
       <a href="https://alanza.xyz/log/so-whats-topology/">Read More</a>
     </description>
    </item>
   
    <item>
     <pubDate>Tue, 26 Nov 2024 16:00:00 +0000</pubDate>
     <link>https://alanza.xyz/log/so-whats-a-group/</link>
     <guid>https://alanza.xyz/log/so-whats-a-group/</guid>
     <title>So what’s a group again?</title>
     <description>
       <span>&lt;div id=summary&gt;&lt;p&gt; The purpose of this post is to serve as a reference I can link to. I define groups, sure, but the goal is really to communicate what they feel like, how I think about them, what I think is neat about them.&lt;/p&gt;&lt;/div&gt;</span>
       <a href="https://alanza.xyz/log/so-whats-a-group/">Read More</a>
     </description>
    </item>
   
    <item>
     <pubDate>Mon, 18 Nov 2024 19:30:00 +0000</pubDate>
     <link>https://alanza.xyz/log/how-magic-is-too-magic/</link>
     <guid>https://alanza.xyz/log/how-magic-is-too-magic/</guid>
     <title>How magic is too magic? Personalities of programming languages</title>
     <description>
       <span>&lt;div id=summary&gt;&lt;p&gt; I’ve heard people observe that although we often think of language as purely a medium for expressing something that exists prior to language, that the words available to us shape who we are as well. I think there’s some truth to this: I took four semesters of Japanese in grad school—not enough to approach fluency without intensive immersion, but plenty to start feeling out the language. I found that at the time my personality as expressed in Japanese was a bit more cautious than I am in English.&lt;/p&gt;&lt;p&gt;It’s interesting to observe that this difference in what I &lt;em&gt;want&lt;/em&gt; to express and &lt;em&gt;how&lt;/em&gt; is also present for me in programming. Not every language I’ve written a line of has a personality for me yet—mostly this correlates with how seriously I’ve learned what the language has to offer, but interestingly as I’ve improved as a programmer, the personality associations have also started coming faster.&lt;/p&gt;&lt;/div&gt;</span>
       <a href="https://alanza.xyz/log/how-magic-is-too-magic/">Read More</a>
     </description>
    </item>
   
    <item>
     <pubDate>Thu, 31 Oct 2024 01:30:00 +0000</pubDate>
     <link>https://alanza.xyz/log/announcing-zosc/</link>
     <guid>https://alanza.xyz/log/announcing-zosc/</guid>
     <title>Announcing zOSC</title>
     <description>
       <span>&lt;div id=summary&gt;&lt;p&gt; I wrote a little library! The purpose of this post is to advertise its existence.&lt;/p&gt;&lt;/div&gt;</span>
       <a href="https://alanza.xyz/log/announcing-zosc/">Read More</a>
     </description>
    </item>
   
    <item>
     <pubDate>Tue, 08 Oct 2024 18:26:00 +0000</pubDate>
     <link>https://alanza.xyz/log/thoughts-on-learning/</link>
     <guid>https://alanza.xyz/log/thoughts-on-learning/</guid>
     <title>Thoughts on learning</title>
     <description>
       <span>&lt;div id=summary&gt;&lt;p&gt; I’ll go ahead and begin by claiming that generative AI has plateaued, if not already peaked. I might come back to justify that claim later on, but the purpose of this post is to share some musings on generative AI as a tool for accessing expertise.&lt;/p&gt;&lt;/div&gt;</span>
       <a href="https://alanza.xyz/log/thoughts-on-learning/">Read More</a>
     </description>
    </item>
   
    <item>
     <pubDate>Sat, 28 Sep 2024 15:30:00 +0000</pubDate>
     <link>https://alanza.xyz/log/return-statement/</link>
     <guid>https://alanza.xyz/log/return-statement/</guid>
     <title>return &quot;Robbie&quot;;</title>
     <description>
       <span>&lt;div id=summary&gt;&lt;p&gt; This summer I spent twelve weeks at &lt;a href=&quot;https://recurse.com&quot;&gt;The Recurse Center&lt;/a&gt;, a self-directed program that describes itself as “like a writer’s retreat, but for programmers”. Many participants write a “return statement” describing and reflecting on their time with the program. The name is a cute little pun: many functions in a computer program finish with a “return statement”, which allows the function to yield a bit of data as a result of the function’s execution. Anyway, this is mine.&lt;/p&gt;&lt;/div&gt;</span>
       <a href="https://alanza.xyz/log/return-statement/">Read More</a>
     </description>
    </item>
   
    <item>
     <pubDate>Sat, 20 Apr 2024 14:40:00 +0000</pubDate>
     <link>https://alanza.xyz/log/for-completeness/</link>
     <guid>https://alanza.xyz/log/for-completeness/</guid>
     <title>For completeness: real numbers</title>
     <description>
       <span>&lt;div id=summary&gt;&lt;p&gt;In mathematics, if you squint, the word “real” has a kind of eldritch quality. Although calculus students work confidently with them, and they enable all kinds of nice behavior in topology, the definition of a /real number/ is, well, surreal. The title of this blog post is a pun. You might ask why we need the real numbers, and one answer is “for completeness”. For the same reason, I thought a blog post would be useful.&lt;/p&gt;&lt;/div&gt;</span>
       <a href="https://alanza.xyz/log/for-completeness/">Read More</a>
     </description>
    </item>
   
  </channel>
</rss>
